// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var cleanPosts, evtSrc, onError, onMessage, onOpen, synthesizeLink,
      _this = this;
    evtSrc = new EventSource("io");
    synthesizeLink = function(url, index) {
      var fileName, href, img, link, linkText;
      linkText = "攻略" + (index + 1);
      fileName = linkText + "." + url.split('.').pop();
      href = ("" + url) + ("#name=" + linkText) + '&content-type=image/jpeg' + '&filepath=/sdcard/travel/';
      img = $("<img>");
      img.attr('src', url);
      img.attr('width', 260);
      link = $("<a>");
      link.attr('href', href);
      link.attr('title', "下载" + linkText);
      link.attr('download', fileName);
      link.attr('name', url);
      img.appendTo(link);
      $(link).tooltip();
      return link;
    };
    cleanPosts = function(soup) {
      var cleaned, posts;
      posts = $("li", soup);
      cleaned = [];
      _.each(posts, function(e, i, l) {
        var href, img, link, src;
        img = $(e).find(".pic img");
        console.log(img);
        link = $('<a>');
        src = img.attr("src");
        href = src + ("#name=" + src) + '&content-type=image/jpeg' + '&filepath=/sdcard/travel/';
        console.log(href);
        link.attr('href', href);
        link.attr('download', src);
        link.attr('title', "下载");
        link.append(img);
        return cleaned.push(link);
      });
      return cleaned;
    };
    onMessage = function(e) {
      var cleaned, data,
        _this = this;
      data = JSON.parse(e.data);
      if (data) {
        $('#loading').fadeOut();
        $('#message').fadeOut();
        $('#result-list').fadeIn();
        _.each(data.ImgList, function(element, index, list) {
          synthesizeLink(element, index).hide().appendTo($('#result-list')).fadeIn();
          return _this;
        });
        cleaned = cleanPosts(data.Posts);
        _.each(cleaned, function(element, index, list) {
          element.hide().appendTo($('#img-list')).fadeIn();
          return _this;
        });
      }
      return this;
    };
    onOpen = function(e) {
      console.log('opened');
      return this;
    };
    onError = function(e) {
      var statusStr;
      statusStr = "";
      switch (e.eventPhase) {
        case 0:
          statusStr = "CONNECTING";
          break;
        case 1:
          statusStr = "OPEN";
          break;
        case 2:
          statusStr = "CLOSED";
      }
      return console.log(statusStr);
    };
    evtSrc.addEventListener("message", onMessage, false);
    evtSrc.addEventListener("open", onOpen, false);
    return evtSrc.addEventListener("error", onError, false);
  });

}).call(this);
